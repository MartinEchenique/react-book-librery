{"version":3,"sources":["SearchBook.js","Book.js","BookLibrary.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["SearchBook","props","onSubmit","e","preventDefault","handleSubmit","className","type","value","data","title","name","onChange","handleChange","required","author","pages","checked","read","onClick","handleAddBookForm","filter","Book","handleDeleteBook","id","BookLibrary","state","isAddFormVisible","addBookForm","addBookFormClear","books","handleAddBookFormChange","bind","renderBooks","this","setState","prevState","book","concat","prevstate","event","target","newState","includes","map","key","renderForm","handleSearch","React","Component","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e94573b2.chunk.js","sourcesContent":["import React from 'react';\n\nfunction SearchBook(props) {\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        props.handleSubmit();\n      }}\n      className=\"add-new-book-form\"\n    >\n      <label>\n        Title:\n        <input\n          type=\"text\"\n          value={props.data.title}\n          name=\"title\"\n          onChange={props.handleChange}\n          required\n        />\n      </label>\n      <label>\n        <br />\n        Author:\n        <input\n          type=\"text\"\n          value={props.data.author}\n          name=\"author\"\n          onChange={props.handleChange}\n        />\n      </label>\n      <label>\n        <br />\n        Number of pages:\n        <input\n          type=\"number\"\n          name=\"pages\"\n          value={props.data.pages}\n          onChange={props.handleChange}\n        />\n      </label>\n      <label>\n        <br />\n        Read?\n        <input\n          type=\"checkbox\"\n          name=\"read\"\n          checked={props.data.read}\n          onChange={props.handleChange}\n        />\n      </label>\n      <br />\n      <button> Add</button>\n      <button type=\"button\" onClick={props.handleAddBookForm} name=\"finish\">\n        Finish\n      </button>\n      <label>\n        <br />\n        Filter\n        <input\n          type=\"checkbox\"\n          name=\"filter\"\n          checked={props.filter}\n          onChange={props.handleChange}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default SearchBook;\n","import React from 'react';\n\nfunction Book(props) {\n  return (\n    <div className=\"book-card\">\n      <h3 className=\"title\">{props.data.title}</h3>\n      <ul>\n        <li className=\"book-data\">Author: {props.data.author}</li>\n        <li className=\"book-data\">Pages: {props.data.pages}</li>\n        <li className=\"book-data\">Read: {props.data.read}</li>\n      </ul>\n     \n      <button\n        onClick={() => props.handleDeleteBook(props.id)}\n        className=\"remove-btn\"\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default Book;\n","import React from 'react';\nimport './App.css';\nimport SearchBook from './SearchBook';\nimport Book from './Book';\nclass BookLibrary extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isAddFormVisible: false,\n      addBookForm: {\n        title: '',\n        author: '',\n        pages: '',\n        read: false,\n        filter: false,\n      },\n      addBookFormClear: { title: '', author: '', pages: '', read: false },\n      books: [\n        {\n          data: { title: 'book 0', author: 'person', pages: '150', read: true },\n          id: 0,\n        },\n        {\n          data: {\n            title: 'book 1',\n            author: 'person',\n            pages: '150',\n            read: false,\n          },\n          id: 1,\n        },\n        {\n          data: { title: 'book 2', author: 'person', pages: '150', read: true },\n          id: 2,\n        },\n      ],\n      id: 3,\n    };\n    this.handleAddBookFormChange = this.handleAddBookFormChange.bind(this);\n    this.handleAddBookForm = this.handleAddBookForm.bind(this);\n    this.renderBooks = this.renderBooks.bind(this);\n    this.handleDeleteBook = this.handleDeleteBook.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleAddBookForm() {\n    this.setState((prevState) => {\n      const newState = !prevState.isAddFormVisible;\n      return {\n        isAddFormVisible: newState,\n        addBookForm: { ...this.state.addBookFormClear },\n      };\n    });\n  }\n  handleSubmit() {\n    if (this.state.addBookForm.title === '') {\n      return;\n    }\n    const book = {\n      data: {\n        ...this.state.addBookForm,\n      },\n      id: this.state.id,\n    };\n\n    this.setState((prevState) => {\n      return {\n        id: (prevState.id += 1),\n        books: this.state.books.concat(book),\n        addBookForm: { ...this.state.addBookFormClear },\n      };\n    });\n  }\n  handleDeleteBook(id) {\n    this.setState((prevstate) => {\n      return { books: prevstate.books.filter((book) => book.id !== id) };\n    });\n  }\n  handleAddBookFormChange(event) {\n    const { value, name, type } = event.target;\n    this.setState((prevState) => {\n      const newState = { ...prevState };\n      if (type === 'checkbox') {\n        newState.addBookForm[name] = !prevState.addBookForm[name];\n        return { newState };\n      }\n      newState.addBookForm[name] = value;\n      return { newState };\n    });\n  }\n  renderBooks() {\n    let bookList;\n    if (this.state.addBookForm.filter) {\n      bookList = this.state.books.filter((book) => {\n        return book.data.title.includes(this.state.addBookForm.title);\n      });\n    } else {\n      bookList = this.state.books;\n    }\n    return bookList.map((book) => (\n      <Book\n        data={{ ...book.data, read: book.data.read ? 'Yes' : 'No yet' }}\n        key={book.id}\n        id={book.id}\n        handleDeleteBook={this.handleDeleteBook}\n      />\n    ));\n  }\n\n  render() {\n    const renderForm = this.state.isAddFormVisible ? (\n      <SearchBook\n        handleSubmit={this.handleSubmit}\n        handleAddBookForm={this.handleAddBookForm}\n        handleChange={this.handleAddBookFormChange}\n        handleSearch={this.handleSearch}\n        filter={this.state.addBookForm.filter}\n        data={this.state.addBookForm}\n      />\n    ) : (\n      <button\n        onClick={this.handleAddBookForm}\n        name=\"startForm\"\n        id=\"add-new-book\"\n      >\n        Add Book\n      </button>\n    );\n\n    return (\n      <div className=\"App\">\n        {renderForm}\n        <div id=\"books-container\">{this.renderBooks()}</div>\n      </div>\n    );\n  }\n}\n\nexport default BookLibrary;\n","import React from 'react';\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>Library</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport BookLibrary from './BookLibrary';\nimport Header from './Header';\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <Header />\n        <BookLibrary />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}